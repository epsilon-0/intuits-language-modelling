import numpy as np
from scipy.stats import wasserstein_distance
from numpy.linalg import norm
N = 20
time = 15
d = []
for i in range(1,time+1): # steps (epochs of conversations)
    c = 0.
    x = []
    for j in range(N): # number of people
        x.append(np.loadtxt(str(i)+"/"+str(j), delimiter="\t"))
    for j in range(N):
        for k in range(j+1, N):
            m = min(len(x[j]) ,len(x[k]) ) 
            for z in range(m):
	            c += wasserstein_distance(x[j][z], x[k][z])
            #norm_ += norm(x[j] - x[k])
            c= c/m
    d.append(c/N)

[163639.299022024,
 128732.83476852979,
 91416.93997804922,
 70785.66135310348,
 63708.96659960544,
 41394.6195597721,
 34742.25820182816,
 28084.3302240349,
 26599.445830187833,
 25812.255129984394]
